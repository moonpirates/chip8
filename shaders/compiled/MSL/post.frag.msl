#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_UniformBlock
{
    float2 windowSize;
};

struct main0_out
{
    float4 out_var_SV_Target0 [[color(0)]];
};

struct main0_in
{
    float2 in_var_TEXCOORD0 [[user(locn0)]];
};

fragment main0_out main0(main0_in in [[stage_in]], constant type_UniformBlock& UniformBlock [[buffer(0)]], texture2d<float> ColorTexture [[texture(0)]], sampler ColorSampler [[sampler(0)]])
{
    main0_out out = {};
    float4 _328;
    do
    {
        float2 _67 = float2(1.0) / UniformBlock.windowSize;
        int2 _69 = int2(in.in_var_TEXCOORD0 * UniformBlock.windowSize);
        float2 _71 = (in.in_var_TEXCOORD0 * 2.0) - float2(1.0);
        float2 _73 = _71.yx * float2(0.20000000298023223876953125);
        float2 _78 = ((_71 + ((_71 * _73) * _73)) * 0.5) + float2(0.5);
        float _79 = _78.x;
        bool _85;
        if (!(_79 < 0.0))
        {
            _85 = _79 >= 1.0;
        }
        else
        {
            _85 = true;
        }
        bool _91;
        if (!_85)
        {
            _91 = _78.y < 0.0;
        }
        else
        {
            _91 = true;
        }
        bool _97;
        if (!_91)
        {
            _97 = _78.y >= 1.0;
        }
        else
        {
            _97 = true;
        }
        if (_97)
        {
            _328 = float4(0.0, 0.0, 0.0, 1.0);
            break;
        }
        bool _105;
        if (!(_79 < 0.0500000007450580596923828125))
        {
            _105 = _79 > 0.949999988079071044921875;
        }
        else
        {
            _105 = true;
        }
        bool _111;
        if (!_105)
        {
            _111 = _78.y < 0.0500000007450580596923828125;
        }
        else
        {
            _111 = true;
        }
        bool _117;
        if (!_111)
        {
            _117 = _78.y > 0.949999988079071044921875;
        }
        else
        {
            _117 = true;
        }
        float4 _269;
        if (_117)
        {
            _269 = float4(0.20000000298023223876953125, 0.20000000298023223876953125, 0.20000000298023223876953125, 1.0);
        }
        else
        {
            float2 _126 = float2((_79 - 0.0500000007450580596923828125) * 1.111111164093017578125, (_78.y - 0.0500000007450580596923828125) * 1.111111164093017578125);
            float2 _129 = float2(2.0) / UniformBlock.windowSize;
            float2 _130 = _126 - _129;
            float _131 = _130.y;
            float2 _132 = _126;
            _132.y = _131;
            float2 _134;
            float _137;
            float3 _139;
            _134 = _132;
            _137 = 0.0;
            _139 = float3(0.0);
            float2 _135;
            float _138;
            float3 _140;
            float2 _190;
            float _141;
            for (;;)
            {
                _141 = _134.y;
                if (_141 < (_131 + (_129.y * 2.0)))
                {
                    if (_141 < 0.0)
                    {
                        _190 = _134;
                        _138 = _137;
                        _140 = _139;
                        float _192 = _190.y;
                        _135 = _190;
                        _135.y = _192 + _67.y;
                        _134 = _135;
                        _137 = _138;
                        _139 = _140;
                        continue;
                    }
                    if (_141 >= 1.0)
                    {
                        break;
                    }
                    float _154 = _130.x;
                    float2 _155 = _134;
                    _155.x = _154;
                    float2 _157;
                    float _160;
                    float3 _162;
                    _157 = _155;
                    _160 = _137;
                    _162 = _139;
                    float2 _158;
                    float _161;
                    float3 _163;
                    float _164;
                    for (;;)
                    {
                        _164 = _157.x;
                        if (_164 < (_154 + (_129.x * 2.0)))
                        {
                            if (_164 < 0.0)
                            {
                                _161 = _160;
                                _163 = _162;
                                _158 = _157;
                                _158.x = _164 + _67.x;
                                _157 = _158;
                                _160 = _161;
                                _162 = _163;
                                continue;
                            }
                            if (_164 >= 1.0)
                            {
                                break;
                            }
                            _161 = _160 + 1.0;
                            _163 = _162 + float3(mix(float4(0.20000000298023223876953125, 0.20000000298023223876953125, 0.20000000298023223876953125, 1.0), float4(0.19599999487400054931640625, 1.0, 0.4000000059604644775390625, 1.0), float4(ColorTexture.sample(ColorSampler, _157).x)).xyz);
                            _158 = _157;
                            _158.x = _164 + _67.x;
                            _157 = _158;
                            _160 = _161;
                            _162 = _163;
                            continue;
                        }
                        else
                        {
                            break;
                        }
                    }
                    _190 = _157;
                    _138 = _160;
                    _140 = _162;
                    float _192 = _190.y;
                    _135 = _190;
                    _135.y = _192 + _67.y;
                    _134 = _135;
                    _137 = _138;
                    _139 = _140;
                    continue;
                }
                else
                {
                    break;
                }
            }
            float2 _196 = float2(15.0, 10.0) / UniformBlock.windowSize;
            float2 _197 = _126 - _196;
            float _198 = _197.y;
            float2 _199 = _126;
            _199.y = _198;
            float2 _201;
            float _204;
            float3 _206;
            _201 = _199;
            _204 = 0.0;
            _206 = float3(0.0);
            float2 _202;
            float _205;
            float3 _207;
            float2 _257;
            float _208;
            for (;;)
            {
                _208 = _201.y;
                if (_208 < (_198 + (_196.y * 2.0)))
                {
                    if (_208 < 0.0)
                    {
                        _257 = _201;
                        _205 = _204;
                        _207 = _206;
                        float _259 = _257.y;
                        _202 = _257;
                        _202.y = _259 + _67.y;
                        _201 = _202;
                        _204 = _205;
                        _206 = _207;
                        continue;
                    }
                    if (_208 >= 1.0)
                    {
                        break;
                    }
                    float _221 = _197.x;
                    float2 _222 = _201;
                    _222.x = _221;
                    float2 _224;
                    float _227;
                    float3 _229;
                    _224 = _222;
                    _227 = _204;
                    _229 = _206;
                    float2 _225;
                    float _228;
                    float3 _230;
                    float _231;
                    for (;;)
                    {
                        _231 = _224.x;
                        if (_231 < (_221 + (_196.x * 2.0)))
                        {
                            if (_231 < 0.0)
                            {
                                _228 = _227;
                                _230 = _229;
                                _225 = _224;
                                _225.x = _231 + _67.x;
                                _224 = _225;
                                _227 = _228;
                                _229 = _230;
                                continue;
                            }
                            if (_231 >= 1.0)
                            {
                                break;
                            }
                            _228 = _227 + 1.0;
                            _230 = _229 + float3(mix(float4(0.20000000298023223876953125, 0.20000000298023223876953125, 0.20000000298023223876953125, 1.0), float4(0.19599999487400054931640625, 1.0, 0.4000000059604644775390625, 1.0), float4(ColorTexture.sample(ColorSampler, _224).x)).xyz);
                            _225 = _224;
                            _225.x = _231 + _67.x;
                            _224 = _225;
                            _227 = _228;
                            _229 = _230;
                            continue;
                        }
                        else
                        {
                            break;
                        }
                    }
                    _257 = _224;
                    _205 = _227;
                    _207 = _229;
                    float _259 = _257.y;
                    _202 = _257;
                    _202.y = _259 + _67.y;
                    _201 = _202;
                    _204 = _205;
                    _206 = _207;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _269 = float4(precise::max(_139 / float3(_137), (_206 / float3(_204)) * 0.75), 1.0);
        }
        float4 _278 = _269 * ((fast::clamp(cos(float(_69.y) * 1.13097345829010009765625) + 1.0, 0.0, 1.0) * 0.25) + 0.75);
        float _281 = float(_69.x - 3 * (_69.x / 3));
        float4 _313;
        if (_281 == 0.0)
        {
            float4 _288 = _278;
            _288.y = _278.y * 0.64999997615814208984375;
            _288.z = _278.z * 0.64999997615814208984375;
            _313 = _288;
        }
        else
        {
            float4 _312;
            if (_281 == 1.0)
            {
                float4 _298 = _278;
                _298.x = _278.x * 0.64999997615814208984375;
                _298.z = _278.z * 0.64999997615814208984375;
                _312 = _298;
            }
            else
            {
                float4 _311;
                if (_281 == 2.0)
                {
                    float4 _307 = _278;
                    _307.x = _278.x * 0.64999997615814208984375;
                    _307.y = _278.y * 0.64999997615814208984375;
                    _311 = _307;
                }
                else
                {
                    _311 = _278;
                }
                _312 = _311;
            }
            _313 = _312;
        }
        _328 = (float4(1.0) - powr(abs(_313 - float4(1.0)), float4(1.7000000476837158203125))) * (powr(((in.in_var_TEXCOORD0.x * (1.0 - in.in_var_TEXCOORD0.x)) * in.in_var_TEXCOORD0.y) * (1.0 - in.in_var_TEXCOORD0.y), 0.25) * 2.5);
        break;
    } while(false);
    out.out_var_SV_Target0 = _328;
    return out;
}

