#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_UniformBlock
{
    float2 windowSize;
};

struct main0_out
{
    float4 out_var_SV_Target0 [[color(0)]];
};

struct main0_in
{
    float2 in_var_TEXCOORD0 [[user(locn0)]];
};

fragment main0_out main0(main0_in in [[stage_in]], constant type_UniformBlock& UniformBlock [[buffer(0)]], texture2d<float> ColorTexture [[texture(0)]], sampler ColorSampler [[sampler(0)]])
{
    main0_out out = {};
    float4 _321;
    do
    {
        float2 _64 = float2(1.0) / UniformBlock.windowSize;
        int2 _66 = int2(in.in_var_TEXCOORD0 * UniformBlock.windowSize);
        float2 _68 = (in.in_var_TEXCOORD0 * 2.0) - float2(1.0);
        float2 _70 = _68.yx * float2(0.20000000298023223876953125);
        float2 _75 = ((_68 + ((_68 * _70) * _70)) * 0.5) + float2(0.5);
        float _76 = _75.x;
        bool _82;
        if (!(_76 < 0.0))
        {
            _82 = _76 >= 1.0;
        }
        else
        {
            _82 = true;
        }
        bool _88;
        if (!_82)
        {
            _88 = _75.y < 0.0;
        }
        else
        {
            _88 = true;
        }
        bool _94;
        if (!_88)
        {
            _94 = _75.y >= 1.0;
        }
        else
        {
            _94 = true;
        }
        if (_94)
        {
            _321 = float4(0.0, 0.0, 0.0, 1.0);
            break;
        }
        bool _102;
        if (!(_76 < 0.0500000007450580596923828125))
        {
            _102 = _76 > 0.949999988079071044921875;
        }
        else
        {
            _102 = true;
        }
        bool _108;
        if (!_102)
        {
            _108 = _75.y < 0.0500000007450580596923828125;
        }
        else
        {
            _108 = true;
        }
        bool _114;
        if (!_108)
        {
            _114 = _75.y > 0.949999988079071044921875;
        }
        else
        {
            _114 = true;
        }
        float4 _266;
        if (_114)
        {
            _266 = float4(0.20000000298023223876953125, 0.20000000298023223876953125, 0.20000000298023223876953125, 1.0);
        }
        else
        {
            float2 _123 = float2((_76 - 0.0500000007450580596923828125) * 1.111111164093017578125, (_75.y - 0.0500000007450580596923828125) * 1.111111164093017578125);
            float2 _126 = float2(2.0) / UniformBlock.windowSize;
            float2 _127 = _123 - _126;
            float _128 = _127.y;
            float2 _129 = _123;
            _129.y = _128;
            float2 _131;
            float _134;
            float3 _136;
            _131 = _129;
            _134 = 0.0;
            _136 = float3(0.0);
            float2 _132;
            float _135;
            float3 _137;
            float2 _187;
            float _138;
            for (;;)
            {
                _138 = _131.y;
                if (_138 < (_128 + (_126.y * 2.0)))
                {
                    if (_138 < 0.0)
                    {
                        _187 = _131;
                        _135 = _134;
                        _137 = _136;
                        float _189 = _187.y;
                        _132 = _187;
                        _132.y = _189 + _64.y;
                        _131 = _132;
                        _134 = _135;
                        _136 = _137;
                        continue;
                    }
                    if (_138 >= 1.0)
                    {
                        break;
                    }
                    float _151 = _127.x;
                    float2 _152 = _131;
                    _152.x = _151;
                    float2 _154;
                    float _157;
                    float3 _159;
                    _154 = _152;
                    _157 = _134;
                    _159 = _136;
                    float2 _155;
                    float _158;
                    float3 _160;
                    float _161;
                    for (;;)
                    {
                        _161 = _154.x;
                        if (_161 < (_151 + (_126.x * 2.0)))
                        {
                            if (_161 < 0.0)
                            {
                                _158 = _157;
                                _160 = _159;
                                _155 = _154;
                                _155.x = _161 + _64.x;
                                _154 = _155;
                                _157 = _158;
                                _159 = _160;
                                continue;
                            }
                            if (_161 >= 1.0)
                            {
                                break;
                            }
                            _158 = _157 + 1.0;
                            _160 = _159 + float3(mix(float4(0.20000000298023223876953125, 0.20000000298023223876953125, 0.20000000298023223876953125, 1.0), float4(0.19599999487400054931640625, 1.0, 0.4000000059604644775390625, 1.0), float4(ColorTexture.sample(ColorSampler, _154).x)).xyz);
                            _155 = _154;
                            _155.x = _161 + _64.x;
                            _154 = _155;
                            _157 = _158;
                            _159 = _160;
                            continue;
                        }
                        else
                        {
                            break;
                        }
                    }
                    _187 = _154;
                    _135 = _157;
                    _137 = _159;
                    float _189 = _187.y;
                    _132 = _187;
                    _132.y = _189 + _64.y;
                    _131 = _132;
                    _134 = _135;
                    _136 = _137;
                    continue;
                }
                else
                {
                    break;
                }
            }
            float2 _193 = float2(15.0, 10.0) / UniformBlock.windowSize;
            float2 _194 = _123 - _193;
            float _195 = _194.y;
            float2 _196 = _123;
            _196.y = _195;
            float2 _198;
            float _201;
            float3 _203;
            _198 = _196;
            _201 = 0.0;
            _203 = float3(0.0);
            float2 _199;
            float _202;
            float3 _204;
            float2 _254;
            float _205;
            for (;;)
            {
                _205 = _198.y;
                if (_205 < (_195 + (_193.y * 2.0)))
                {
                    if (_205 < 0.0)
                    {
                        _254 = _198;
                        _202 = _201;
                        _204 = _203;
                        float _256 = _254.y;
                        _199 = _254;
                        _199.y = _256 + _64.y;
                        _198 = _199;
                        _201 = _202;
                        _203 = _204;
                        continue;
                    }
                    if (_205 >= 1.0)
                    {
                        break;
                    }
                    float _218 = _194.x;
                    float2 _219 = _198;
                    _219.x = _218;
                    float2 _221;
                    float _224;
                    float3 _226;
                    _221 = _219;
                    _224 = _201;
                    _226 = _203;
                    float2 _222;
                    float _225;
                    float3 _227;
                    float _228;
                    for (;;)
                    {
                        _228 = _221.x;
                        if (_228 < (_218 + (_193.x * 2.0)))
                        {
                            if (_228 < 0.0)
                            {
                                _225 = _224;
                                _227 = _226;
                                _222 = _221;
                                _222.x = _228 + _64.x;
                                _221 = _222;
                                _224 = _225;
                                _226 = _227;
                                continue;
                            }
                            if (_228 >= 1.0)
                            {
                                break;
                            }
                            _225 = _224 + 1.0;
                            _227 = _226 + float3(mix(float4(0.20000000298023223876953125, 0.20000000298023223876953125, 0.20000000298023223876953125, 1.0), float4(0.19599999487400054931640625, 1.0, 0.4000000059604644775390625, 1.0), float4(ColorTexture.sample(ColorSampler, _221).x)).xyz);
                            _222 = _221;
                            _222.x = _228 + _64.x;
                            _221 = _222;
                            _224 = _225;
                            _226 = _227;
                            continue;
                        }
                        else
                        {
                            break;
                        }
                    }
                    _254 = _221;
                    _202 = _224;
                    _204 = _226;
                    float _256 = _254.y;
                    _199 = _254;
                    _199.y = _256 + _64.y;
                    _198 = _199;
                    _201 = _202;
                    _203 = _204;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _266 = float4(precise::max(_136 / float3(_134), (_203 / float3(_201)) * 0.75), 1.0);
        }
        float4 _275 = _266 * ((fast::clamp(cos(float(_66.y) * 1.13097345829010009765625) + 1.0, 0.0, 1.0) * 0.25) + 0.75);
        float _278 = float(_66.x - 3 * (_66.x / 3));
        float4 _310;
        if (_278 == 0.0)
        {
            float4 _285 = _275;
            _285.y = _275.y * 0.64999997615814208984375;
            _285.z = _275.z * 0.64999997615814208984375;
            _310 = _285;
        }
        else
        {
            float4 _309;
            if (_278 == 1.0)
            {
                float4 _295 = _275;
                _295.x = _275.x * 0.64999997615814208984375;
                _295.z = _275.z * 0.64999997615814208984375;
                _309 = _295;
            }
            else
            {
                float4 _308;
                if (_278 == 2.0)
                {
                    float4 _304 = _275;
                    _304.x = _275.x * 0.64999997615814208984375;
                    _304.y = _275.y * 0.64999997615814208984375;
                    _308 = _304;
                }
                else
                {
                    _308 = _275;
                }
                _309 = _308;
            }
            _310 = _309;
        }
        _321 = _310 * (powr(((in.in_var_TEXCOORD0.x * (1.0 - in.in_var_TEXCOORD0.x)) * in.in_var_TEXCOORD0.y) * (1.0 - in.in_var_TEXCOORD0.y), 0.25) * 2.5);
        break;
    } while(false);
    out.out_var_SV_Target0 = _321;
    return out;
}

