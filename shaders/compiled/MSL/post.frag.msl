#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_UniformBlock
{
    int2 windowSize;
};

struct main0_out
{
    float4 out_var_SV_Target0 [[color(0)]];
};

struct main0_in
{
    float2 in_var_TEXCOORD0 [[user(locn0)]];
};

fragment main0_out main0(main0_in in [[stage_in]], constant type_UniformBlock& UniformBlock [[buffer(0)]], texture2d<float> ColorTexture [[texture(0)]], sampler ColorSampler [[sampler(0)]])
{
    main0_out out = {};
    float4 _323;
    do
    {
        float2 _67 = float2(UniformBlock.windowSize);
        float2 _68 = float2(1.0) / _67;
        int2 _70 = int2(in.in_var_TEXCOORD0 * _67);
        float2 _72 = (in.in_var_TEXCOORD0 * 2.0) - float2(1.0);
        float2 _74 = _72.yx * float2(0.20000000298023223876953125);
        float2 _79 = ((_72 + ((_72 * _74) * _74)) * 0.5) + float2(0.5);
        float _80 = _79.x;
        bool _86;
        if (!(_80 < 0.0))
        {
            _86 = _80 >= 1.0;
        }
        else
        {
            _86 = true;
        }
        bool _92;
        if (!_86)
        {
            _92 = _79.y < 0.0;
        }
        else
        {
            _92 = true;
        }
        bool _98;
        if (!_92)
        {
            _98 = _79.y >= 1.0;
        }
        else
        {
            _98 = true;
        }
        if (_98)
        {
            _323 = float4(0.0, 0.0, 0.0, 1.0);
            break;
        }
        bool _106;
        if (!(_80 < 0.0500000007450580596923828125))
        {
            _106 = _80 > 0.949999988079071044921875;
        }
        else
        {
            _106 = true;
        }
        bool _112;
        if (!_106)
        {
            _112 = _79.y < 0.0500000007450580596923828125;
        }
        else
        {
            _112 = true;
        }
        bool _118;
        if (!_112)
        {
            _118 = _79.y > 0.949999988079071044921875;
        }
        else
        {
            _118 = true;
        }
        float4 _264;
        if (_118)
        {
            _264 = float4(0.20000000298023223876953125, 0.20000000298023223876953125, 0.20000000298023223876953125, 1.0);
        }
        else
        {
            float2 _127 = float2((_80 - 0.0500000007450580596923828125) * 1.111111164093017578125, (_79.y - 0.0500000007450580596923828125) * 1.111111164093017578125);
            float2 _130 = float2(2.0) / _67;
            float2 _131 = _127 - _130;
            float _132 = _131.y;
            float2 _133 = _127;
            _133.y = _132;
            float2 _135;
            float _138;
            float3 _140;
            _135 = _133;
            _138 = 0.0;
            _140 = float3(0.0);
            float2 _136;
            float _139;
            float3 _141;
            float2 _188;
            float _142;
            for (;;)
            {
                _142 = _135.y;
                if (_142 < (_132 + (_130.y * 2.0)))
                {
                    if (_142 < 0.0)
                    {
                        _188 = _135;
                        _139 = _138;
                        _141 = _140;
                        float _190 = _188.y;
                        _136 = _188;
                        _136.y = _190 + _68.y;
                        _135 = _136;
                        _138 = _139;
                        _140 = _141;
                        continue;
                    }
                    if (_142 >= 1.0)
                    {
                        break;
                    }
                    float _155 = _131.x;
                    float2 _156 = _135;
                    _156.x = _155;
                    float2 _158;
                    float _161;
                    float3 _163;
                    _158 = _156;
                    _161 = _138;
                    _163 = _140;
                    float2 _159;
                    float _162;
                    float3 _164;
                    float _165;
                    for (;;)
                    {
                        _165 = _158.x;
                        if (_165 < (_155 + (_130.x * 2.0)))
                        {
                            if (_165 < 0.0)
                            {
                                _162 = _161;
                                _164 = _163;
                                _159 = _158;
                                _159.x = _165 + _68.x;
                                _158 = _159;
                                _161 = _162;
                                _163 = _164;
                                continue;
                            }
                            if (_165 >= 1.0)
                            {
                                break;
                            }
                            _162 = _161 + 1.0;
                            _164 = _163 + mix(float4(0.20000000298023223876953125, 0.20000000298023223876953125, 0.20000000298023223876953125, 1.0), float4(0.19599999487400054931640625, 1.0, 0.4000000059604644775390625, 1.0), float4(ColorTexture.sample(ColorSampler, _158).x)).xyz;
                            _159 = _158;
                            _159.x = _165 + _68.x;
                            _158 = _159;
                            _161 = _162;
                            _163 = _164;
                            continue;
                        }
                        else
                        {
                            break;
                        }
                    }
                    _188 = _158;
                    _139 = _161;
                    _141 = _163;
                    float _190 = _188.y;
                    _136 = _188;
                    _136.y = _190 + _68.y;
                    _135 = _136;
                    _138 = _139;
                    _140 = _141;
                    continue;
                }
                else
                {
                    break;
                }
            }
            float2 _194 = float2(10.0) / _67;
            float2 _195 = _127 - _194;
            float _196 = _195.y;
            float2 _197 = _127;
            _197.y = _196;
            float2 _199;
            float _202;
            float3 _204;
            _199 = _197;
            _202 = 0.0;
            _204 = float3(0.0);
            float2 _200;
            float _203;
            float3 _205;
            float2 _252;
            float _206;
            for (;;)
            {
                _206 = _199.y;
                if (_206 < (_196 + (_194.y * 2.0)))
                {
                    if (_206 < 0.0)
                    {
                        _252 = _199;
                        _203 = _202;
                        _205 = _204;
                        float _254 = _252.y;
                        _200 = _252;
                        _200.y = _254 + _68.y;
                        _199 = _200;
                        _202 = _203;
                        _204 = _205;
                        continue;
                    }
                    if (_206 >= 1.0)
                    {
                        break;
                    }
                    float _219 = _195.x;
                    float2 _220 = _199;
                    _220.x = _219;
                    float2 _222;
                    float _225;
                    float3 _227;
                    _222 = _220;
                    _225 = _202;
                    _227 = _204;
                    float2 _223;
                    float _226;
                    float3 _228;
                    float _229;
                    for (;;)
                    {
                        _229 = _222.x;
                        if (_229 < (_219 + (_194.x * 2.0)))
                        {
                            if (_229 < 0.0)
                            {
                                _226 = _225;
                                _228 = _227;
                                _223 = _222;
                                _223.x = _229 + _68.x;
                                _222 = _223;
                                _225 = _226;
                                _227 = _228;
                                continue;
                            }
                            if (_229 >= 1.0)
                            {
                                break;
                            }
                            _226 = _225 + 1.0;
                            _228 = _227 + mix(float4(0.20000000298023223876953125, 0.20000000298023223876953125, 0.20000000298023223876953125, 1.0), float4(0.19599999487400054931640625, 1.0, 0.4000000059604644775390625, 1.0), float4(ColorTexture.sample(ColorSampler, _222).x)).xyz;
                            _223 = _222;
                            _223.x = _229 + _68.x;
                            _222 = _223;
                            _225 = _226;
                            _227 = _228;
                            continue;
                        }
                        else
                        {
                            break;
                        }
                    }
                    _252 = _222;
                    _203 = _225;
                    _205 = _227;
                    float _254 = _252.y;
                    _200 = _252;
                    _200.y = _254 + _68.y;
                    _199 = _200;
                    _202 = _203;
                    _204 = _205;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _264 = float4(precise::max(_140 / float3(_138), (_204 / float3(_202)) * 0.75), 1.0);
        }
        float4 _273 = _264 * ((fast::clamp(cos(float(_70.y) * 1.13097345829010009765625) + 1.0, 0.0, 1.0) * 0.25) + 0.75);
        float _276 = float(_70.x - 3 * (_70.x / 3));
        float4 _308;
        if (_276 == 0.0)
        {
            float4 _283 = _273;
            _283.y = _273.y * 0.3499999940395355224609375;
            _283.z = _273.z * 0.3499999940395355224609375;
            _308 = _283;
        }
        else
        {
            float4 _307;
            if (_276 == 1.0)
            {
                float4 _293 = _273;
                _293.x = _273.x * 0.3499999940395355224609375;
                _293.z = _273.z * 0.3499999940395355224609375;
                _307 = _293;
            }
            else
            {
                float4 _306;
                if (_276 == 2.0)
                {
                    float4 _302 = _273;
                    _302.x = _273.x * 0.3499999940395355224609375;
                    _302.y = _273.y * 0.3499999940395355224609375;
                    _306 = _302;
                }
                else
                {
                    _306 = _273;
                }
                _307 = _306;
            }
            _308 = _307;
        }
        float2 _315 = in.in_var_TEXCOORD0 * (float2(1.0) - in.in_var_TEXCOORD0.yx);
        _323 = (float4(1.0) - powr(abs(_308 - float4(1.0)), float4(1.7000000476837158203125))) * (powr((_315.x * _315.y) * 15.0, 0.4000000059604644775390625) * 1.5);
        break;
    } while(false);
    out.out_var_SV_Target0 = _323;
    return out;
}

